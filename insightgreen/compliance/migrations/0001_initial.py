# Generated by Django 5.1.2 on 2025-07-17 08:40

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ESGCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, unique=True)),
                ('contact_number', models.CharField(max_length=50)),
                ('contact_email', models.EmailField(max_length=254)),
                ('website_url', models.URLField()),
                ('esg_compliant', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ESGComplianceReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_title', models.CharField(max_length=255)),
                ('organization_name', models.TextField()),
                ('reporting_year', models.IntegerField(choices=[(2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025)], default=2025)),
                ('report_type', models.CharField(choices=[('Annual', 'Annual Report'), ('Quarterly', 'Quarterly Report'), ('Periodic', 'Periodic Updates')], max_length=50)),
                ('document_version', models.CharField(blank=True, max_length=50)),
                ('report_sector', models.TextField()),
                ('compliance_frameworks', models.TextField()),
                ('geographical_region', models.CharField(choices=[('Africa', 'Africa'), ('Asia', 'Asia'), ('Europe', 'Europe'), ('North America', 'North America'), ('South America', 'South America'), ('Oceania', 'Oceania')], default='Not Necessary', max_length=50)),
                ('report_description', models.TextField(blank=True)),
                ('report_file', models.FileField(upload_to='esg_reports/')),
                ('document_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='ESGComplianceStandard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standard_code', models.CharField(max_length=50, unique=True)),
                ('standard_name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ESGComplianceFrameworkTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standard_area', models.CharField(blank=True, max_length=255, null=True)),
                ('sub_standard_area', models.TextField(blank=True, null=True)),
                ('disclosure_title', models.CharField(blank=True, max_length=255, null=True)),
                ('requirements', models.TextField()),
                ('recommendations', models.TextField()),
                ('page_number', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disclosures_test', to='compliance.esgcompliancereport')),
            ],
        ),
        migrations.CreateModel(
            name='ESGComplianceFramework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('standard_area', models.CharField(blank=True, max_length=255, null=True)),
                ('sub_standard_area', models.TextField()),
                ('disclosure_title', models.CharField(blank=True, max_length=255, null=True)),
                ('requirements', models.TextField()),
                ('recommendations', models.TextField()),
                ('page_number', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disclosures', to='compliance.esgcompliancereport')),
            ],
        ),
        migrations.CreateModel(
            name='ESGReportBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('industry_sector', models.CharField(choices=[('Energy', 'Energy'), ('Financials', 'Financial Services'), ('Healthcare', 'Healthcare'), ('Consumer Goods', 'Consumer Goods'), ('Technology', 'Technology'), ('Materials', 'Materials'), ('Industrials', 'Industrials'), ('Utilities', 'Utilities'), ('Consumer Services', 'Consumer Services'), ('Real Estate', 'Real Estate'), ('Telecommunication Services', 'Telecommunications'), ('Consumer Discretionary', 'Consumer Discretionary'), ('Consumer Staples', 'Consumer Staples'), ('Basic Materials', 'Basic Materials'), ('Transportation', 'Transportation'), ('Healthcare Services', 'Healthcare Services'), ('Leisure & Luxury Goods', 'Leisure & Luxury Goods'), ('Pharmaceuticals', 'Pharmaceuticals'), ('Renewables', 'Renewables'), ('Chemicals', 'Chemicals'), ('Mining', 'Mining'), ('Forestry & Paper', 'Forestry & Paper'), ('Agriculture', 'Agriculture'), ('Construction & Engineering', 'Construction & Engineering')], max_length=255)),
                ('country_region', models.CharField(choices=[('Africa', 'Africa'), ('Asia', 'Asia'), ('Europe', 'Europe'), ('North America', 'North America'), ('South America', 'South America'), ('Oceania', 'Oceania')], max_length=50)),
                ('organization_type', models.CharField(choices=[('Public Company', 'Public Company'), ('Private Company', 'Private Company'), ('Government Entity', 'Government Entity'), ('Non-Profit', 'Non-Profit'), ('Financial Institution', 'Financial Institution'), ('State-Owned Enterprise', 'State-Owned Enterprise'), ('Multinational Corporation', 'Multinational Corporation'), ('Startup', 'Startup'), ('SME', 'Small & Medium Enterprise'), ('Other', 'Other')], max_length=255)),
                ('peer_group_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('organization_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='compliance.esgcompany')),
            ],
        ),
        migrations.CreateModel(
            name='CorporateBulkESGReports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_file', models.FileField(upload_to='corporate_reports/')),
                ('document_title', models.CharField(max_length=255, unique=True)),
                ('reporting_year', models.IntegerField(choices=[(2019, 2019), (2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025)], default=2025)),
                ('reporting_period', models.CharField(choices=[('Annual', 'Annual Report'), ('Quarterly', 'Quarterly Report'), ('Periodic', 'Periodic Updates')], max_length=50)),
                ('standards_applied', models.TextField()),
                ('report_type', models.CharField(choices=[('Sustainability', 'Sustainability Report'), ('Integrated', 'Integrated Report'), ('Climate', 'Climate Report'), ('Annual', 'Annual Report'), ('Financial and ESG', 'Financial and ESG Report'), ('Other', 'Other')], default='Annual', max_length=50)),
                ('is_peer_report', models.BooleanField(default=False)),
                ('peer_group_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_confidential', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='compliance.esgreportbatch')),
            ],
            options={
                'unique_together': {('batch', 'document_title', 'reporting_year', 'report_type')},
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed')], default='Pending', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='compliance.esgcompany')),
                ('standard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standard_evaluation', to='compliance.esgcompliancestandard')),
            ],
        ),
        migrations.CreateModel(
            name='ESGComplianceSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_possible', models.IntegerField()),
                ('compliance_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('evaluation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='summary_scores', to='compliance.evaluation')),
            ],
        ),
        migrations.CreateModel(
            name='ExtractedReportPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_number', models.PositiveIntegerField()),
                ('page_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extracted_pages', to='compliance.corporatebulkesgreports')),
            ],
            options={
                'unique_together': {('report', 'page_number')},
            },
        ),
        migrations.CreateModel(
            name='ESGComplianceScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=1, max_digits=2)),
                ('feedback', models.TextField()),
                ('recommendation', models.TextField(blank=True, null=True)),
                ('paragraph', models.TextField(blank=True, null=True)),
                ('matched_text_excerpt', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('compliance_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='compliance.esgcomplianceframework')),
                ('evaluation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='compliance.evaluation')),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='compliance.extractedreportpage')),
            ],
        ),
    ]
